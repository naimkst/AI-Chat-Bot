generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                   @id @default(cuid())
  email                  String                   @unique
  name                   String?
  password               String
  emailVerified          Boolean?
  stripeCustomerId       String?
  sessions               Session[]
  conversations          Conversation[]
  billingInfo            BillingInfo?
  verificationTokens     EmailVerificationToken[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model BillingInfo {
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id])
  plan             String
  status           String
  currentPeriodEnd DateTime
}

model Conversation {
  id       String    @id @default(cuid())
  userId   String
  user     User      @relation(fields: [userId], references: [id])
  chats    Chat[]
  messages Message[]
  createdAt DateTime @default(now())
}

model Chat {
  id             String        @id @default(cuid())
  model          String
  conversationId String
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  messages       Message[]
  createdAt      DateTime      @default(now())
}

model Message {
  id             String       @id @default(cuid())
  role           String
  content        String
  chatId         String
  conversationId String
  chat           Chat         @relation(fields: [chatId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  createdAt      DateTime     @default(now())
}

model EmailVerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  email     String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}