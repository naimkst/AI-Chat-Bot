{"version":3,"file":"index.js","names":["opts?: CreateBuilderOptions<TErrorShape>","opts: RouteHandlerOptions<TRouter>"],"sources":["../src/h3.ts"],"sourcesContent":["import * as Effect from \"effect/Effect\";\nimport type { H3Event } from \"h3\";\nimport { defineEventHandler, toWebRequest } from \"h3\";\n\nimport type { Json } from \"@uploadthing/shared\";\n\nimport { makeAdapterHandler } from \"./_internal/handler\";\nimport type { CreateBuilderOptions } from \"./_internal/upload-builder\";\nimport { createBuilder } from \"./_internal/upload-builder\";\nimport type { FileRouter, RouteHandlerOptions } from \"./types\";\n\nexport {\n  UTFiles,\n  /**\n   * This is an experimental feature.\n   * You need to be feature flagged on our backend to use this\n   */\n  UTRegion as experimental_UTRegion,\n} from \"./_internal/types\";\nexport type { FileRouter };\n\ntype AdapterArgs = {\n  event: H3Event;\n};\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<AdapterArgs, TErrorShape>(opts);\n\nexport const createRouteHandler = <TRouter extends FileRouter>(\n  opts: RouteHandlerOptions<TRouter>,\n) => {\n  const handler = makeAdapterHandler<[H3Event], AdapterArgs>(\n    (event) => Effect.succeed({ event }),\n    (event) => Effect.succeed(toWebRequest(event)),\n    opts,\n    \"h3\",\n  );\n\n  return defineEventHandler(handler);\n};\n"],"mappings":";;;;;;;;AAyBA,MAAa,oBAAoB,CAC/BA,SACG,cAAwC,KAAK;AAElD,MAAa,qBAAqB,CAChCC,SACG;CACH,MAAM,UAAU,mBACd,CAAC,UAAU,OAAO,QAAQ,EAAE,MAAO,EAAC,EACpC,CAAC,UAAU,OAAO,QAAQ,aAAa,MAAM,CAAC,EAC9C,MACA,KACD;AAED,QAAO,mBAAmB,QAAQ;AACnC"}