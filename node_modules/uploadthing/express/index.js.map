{"version":3,"file":"index.js","names":["opts?: CreateBuilderOptions<TErrorShape>","opts: RouteHandlerOptions<TRouter>"],"sources":["../src/express.ts"],"sourcesContent":["import { Readable } from \"node:stream\";\nimport * as Effect from \"effect/Effect\";\nimport type {\n  Request as ExpressRequest,\n  Response as ExpressResponse,\n} from \"express\";\nimport { Router as ExpressRouter } from \"express\";\n\nimport type { Json } from \"@uploadthing/shared\";\n\nimport { makeAdapterHandler } from \"./_internal/handler\";\nimport { getPostBody, toWebRequest } from \"./_internal/to-web-request\";\nimport type { CreateBuilderOptions } from \"./_internal/upload-builder\";\nimport { createBuilder } from \"./_internal/upload-builder\";\nimport type { FileRouter, RouteHandlerOptions } from \"./types\";\n\nexport {\n  UTFiles,\n  /**\n   * This is an experimental feature.\n   * You need to be feature flagged on our backend to use this\n   */\n  UTRegion as experimental_UTRegion,\n} from \"./_internal/types\";\nexport type { FileRouter };\n\ntype AdapterArgs = {\n  req: ExpressRequest;\n  res: ExpressResponse;\n};\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<AdapterArgs, TErrorShape>(opts);\n\nexport const createRouteHandler = <TRouter extends FileRouter>(\n  opts: RouteHandlerOptions<TRouter>,\n): ExpressRouter => {\n  const handler = makeAdapterHandler<\n    [ExpressRequest, ExpressResponse],\n    AdapterArgs\n  >(\n    (req, res) => Effect.succeed({ req, res }),\n    (req) =>\n      Effect.flatMap(getPostBody({ req }), (body) =>\n        toWebRequest(req, body),\n      ).pipe(Effect.orDie),\n    opts,\n    \"express\",\n  );\n\n  return ExpressRouter().all(\"/\", async (req, res) => {\n    const response = await handler(req, res);\n    res.writeHead(response.status, Object.fromEntries(response.headers));\n    if (response.body) {\n      // Slight type mismatch in `node:stream.ReadableStream` and Fetch's `ReadableStream`.\n      Readable.fromWeb(response.body as never).pipe(res);\n    } else {\n      res.end();\n    }\n  });\n};\n"],"mappings":";;;;;;;;;;AA+BA,MAAa,oBAAoB,CAC/BA,SACG,cAAwC,KAAK;AAElD,MAAa,qBAAqB,CAChCC,SACkB;CAClB,MAAM,UAAU,mBAId,CAAC,KAAK,QAAQ,OAAO,QAAQ;EAAE;EAAK;CAAK,EAAC,EAC1C,CAAC,QACC,OAAO,QAAQ,YAAY,EAAE,IAAK,EAAC,EAAE,CAAC,SACpC,aAAa,KAAK,KAAK,CACxB,CAAC,KAAK,OAAO,MAAM,EACtB,MACA,UACD;AAED,QAAO,QAAe,CAAC,IAAI,KAAK,OAAO,KAAK,QAAQ;EAClD,MAAM,WAAW,MAAM,QAAQ,KAAK,IAAI;AACxC,MAAI,UAAU,SAAS,QAAQ,OAAO,YAAY,SAAS,QAAQ,CAAC;AACpE,MAAI,SAAS,KAEX,UAAS,QAAQ,SAAS,KAAc,CAAC,KAAK,IAAI;MAElD,KAAI,KAAK;CAEZ,EAAC;AACH"}