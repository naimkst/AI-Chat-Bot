{"version":3,"file":"index.js","names":["opts?: CreateBuilderOptions<TErrorShape>","opts: RouteHandlerOptions<TRouter>"],"sources":["../src/remix.ts"],"sourcesContent":["import type { ActionFunctionArgs } from \"@remix-run/server-runtime\";\nimport * as Effect from \"effect/Effect\";\n\nimport type { Json } from \"@uploadthing/shared\";\n\nimport { makeAdapterHandler } from \"./_internal/handler\";\nimport type { CreateBuilderOptions } from \"./_internal/upload-builder\";\nimport { createBuilder } from \"./_internal/upload-builder\";\nimport type { FileRouter, RouteHandlerOptions } from \"./types\";\n\nexport type { FileRouter };\nexport {\n  UTFiles,\n  /**\n   * This is an experimental feature.\n   * You need to be feature flagged on our backend to use this\n   */\n  UTRegion as experimental_UTRegion,\n} from \"./_internal/types\";\n\ntype AdapterArgs = {\n  event: ActionFunctionArgs;\n};\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<AdapterArgs, TErrorShape>(opts);\n\nexport const createRouteHandler = <TRouter extends FileRouter>(\n  opts: RouteHandlerOptions<TRouter>,\n) => {\n  const handler = makeAdapterHandler<[ActionFunctionArgs], AdapterArgs>(\n    (args) => Effect.succeed({ event: args }),\n    (args) => Effect.succeed(args.request),\n    opts,\n    \"remix\",\n  );\n  return { action: handler, loader: handler };\n};\n"],"mappings":";;;;;;;AAwBA,MAAa,oBAAoB,CAC/BA,SACG,cAAwC,KAAK;AAElD,MAAa,qBAAqB,CAChCC,SACG;CACH,MAAM,UAAU,mBACd,CAAC,SAAS,OAAO,QAAQ,EAAE,OAAO,KAAM,EAAC,EACzC,CAAC,SAAS,OAAO,QAAQ,KAAK,QAAQ,EACtC,MACA,QACD;AACD,QAAO;EAAE,QAAQ;EAAS,QAAQ;CAAS;AAC5C"}